package main

import (
	"flag"
	"fmt"
	"os"
	"log"
	"github.com/podhmo/selfish/internal/commithistory"
	"github.com/podhmo/selfish"
	"github.com/podhmo/selfish/cmd/selfish/internal"
	"context"
)

// this file is generated by egoist.generators.clikit

// Option ...
type Option struct {
	Alias string // for `-alias`
	Delete bool // for `-delete`
	Silent bool // for `-silent`
	Args []string // cmd.Args
}


func main() {
	opt := &Option{}
	cmd := flag.NewFlagSet("selfish", flag.ContinueOnError)
	cmd.Usage = func() {
		fmt.Fprintln(cmd.Output(), `selfish - individual gist client `)
		fmt.Fprintln(cmd.Output(), "")
		fmt.Fprintln(cmd.Output(), "Usage:")
		cmd.PrintDefaults()
	}
	cmd.StringVar(&opt.Alias, "alias", "", "alias name of uploaded gists")
	cmd.BoolVar(&opt.Delete, "delete", false, "delete uploaded gists")
	cmd.BoolVar(&opt.Silent, "silent", false, "deactivate webbrowser open, after gists uploading")

	if err := cmd.Parse(os.Args[1:]); err != nil {
		if err != flag.ErrHelp {
			cmd.Usage()
		}
		os.Exit(1)
	}
	opt.Args = cmd.Args()
	if err := run(opt); err != nil {
		log.Fatalf("!!%+v", err)
	}
}

func run(opt *Option) error {
	v4 := commithistory.New("selfish")
	v5, err := selfish.LoadConfig(v4)
	if err != nil  {
		return err
	}
	v6 := selfish.NewClient(v5)
	v7 := internal.NewApp(v4, v6, v5, opt.Silent, opt.Delete, opt.Alias)
	return v7.Run(context.Background(), opt.Args)
}